on: [push]
# You will need to create a separate job for each function you want to manage.
jobs:
  job_1:
    name: Create / Update Function 1 to Segment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and Preparing Function
        uses: actions/checkout@v2
      - shell: bash
        # In the bash script below replace lib/function.js with the path to your function code.
        run: |
          echo "Function Code Is"
          cp my-function.js lib/function.txt
          value="$(< lib/function.txt)"
          value="${value//'%'/'%25'}"
          value="${value//$'\n'/'%0A'}"
          value="${value//$'\r'/'%0D'}"
          echo $value
          echo "::set-output name=function_code::$value"
        id: checkout
      - name: Sending Function to Segment
        uses: samgehret/manageSegmentFunction@v1.6 # Uses an action in the root directory will need to be updated once this is on the Actions Marketplace.
        with:
          token: 'nvn093DMmfYXXhx8C-3Fe2g_nhsi8YvhwXTTCfncn04.TsVhwLzPk0PMAnYlkuIf_tWqT0Fx1NxNoD0f_bEFEFo'
          function-code: ${{ steps.checkout.outputs.function_code }} # don't update this
          function-name: 'GH Function v3'
          function-type: Destination
          workspaceID: eVgZgEcWSF
          # function-id: <function id> # Set this value after the function is created.

# Uncomment job_2 below if you want to manage another function

  # job_2:
  #   name: Create / Update Function 2 to Segment
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout and Preparing Function
  #       uses: actions/checkout@v2
  #     - shell: bash
  #       run: |
  #         echo "Function Code Is"
  #         cp lib/function.js lib/function.txt
  #         value="$(< lib/function.txt)"
  #         value="${value//'%'/'%25'}"
  #         value="${value//$'\n'/'%0A'}"
  #         value="${value//$'\r'/'%0D'}"
  #         echo $value
  #         echo "::set-output name=function_code::$value"
  #       id: checkout
  #     - name: Sending Function to Segment
  #       uses: ./ # Uses an action in the root directory
  #       with:
  #         token: '< your segment token >'
  #         function-code: ${{ steps.checkout.outputs.function_code }}
  #         function-name: 'Function 2 Name'
  #         workspaceID: <Workspace ID>
  #         function-id: <function id>
